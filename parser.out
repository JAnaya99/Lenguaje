Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> DEFVAR FUNCIONES MAIN FUNCIONES
Rule 2     DEFVAR -> VAR LLLAV VARIABLE RLLAV
Rule 3     DEFVAR -> <empty>
Rule 4     VARIABLE -> VARIABLE X ID TIPO ENDINS
Rule 5     VARIABLE -> VARIABLE X ID TIPO ARRAY ENDINS
Rule 6     VARIABLE -> <empty>
Rule 7     X -> X ID COMA
Rule 8     X -> <empty>
Rule 9     TIPO -> INT
Rule 10    TIPO -> DOUBLE
Rule 11    ARRAY -> LCOR EXPAR RCOR
Rule 12    ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR
Rule 13    ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR
Rule 14    FUNCIONES -> FUNCIONES FUNC ID LLLAV ESTATUTOS RLLAV
Rule 15    FUNCIONES -> <empty>
Rule 16    MAIN -> FUNC MAINT LLLAV ESTATUTOS RLLAV
Rule 17    ESTATUTOS -> ESTATUTOS ASIGNACION
Rule 18    ESTATUTOS -> ESTATUTOS LLAMADAS
Rule 19    ESTATUTOS -> ESTATUTOS IF
Rule 20    ESTATUTOS -> ESTATUTOS FOR
Rule 21    ESTATUTOS -> ESTATUTOS WHILE
Rule 22    ESTATUTOS -> ESTATUTOS SCAN
Rule 23    ESTATUTOS -> ESTATUTOS PUTS
Rule 24    ESTATUTOS -> <empty>
Rule 25    ASIGNACION -> ID IGUAL EXPAR ENDINS
Rule 26    ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS
Rule 27    LLAMADAS -> CALL ID ENDINS
Rule 28    IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
Rule 29    ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV
Rule 30    ELIF -> <empty>
Rule 31    ELSE -> ELST LLLAV ESTATUTOS RLLAV
Rule 32    ELSE -> <empty>
Rule 33    FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV
Rule 34    WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV
Rule 35    WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
Rule 36    SCAN -> SCANT LPAR Y ID RPAR ENDINS
Rule 37    SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS
Rule 38    Y -> Y ID COMA
Rule 39    Y -> <empty>
Rule 40    PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS
Rule 41    PUTS -> PUTST LPAR Z STRING RPAR ENDINS
Rule 42    Z -> Z STRING COMA
Rule 43    Z -> Z EXPAR COMA
Rule 44    Z -> <empty>
Rule 45    EXPAR -> EXPAR SUMRES T
Rule 46    EXPAR -> T
Rule 47    T -> T MULTDIV F
Rule 48    T -> F
Rule 49    F -> CTE
Rule 50    F -> LPAR EXPAR RPAR
Rule 51    CTE -> ID
Rule 52    CTE -> ID ARRAY
Rule 53    CTE -> DNUMERO
Rule 54    CTE -> NUMERO
Rule 55    EXPLOG -> EXPLOG ORT TL
Rule 56    EXPLOG -> TL
Rule 57    TL -> TL ANDT FL
Rule 58    TL -> FL
Rule 59    FL -> LPAR EXPLOG RPAR
Rule 60    FL -> CTE OPREL CTE

Terminals, with rules where they appear

ANDT                 : 57
CALL                 : 27
COMA                 : 7 38 42 43
DNUMERO              : 53
DOT                  : 35
DOUBLE               : 10
ELIFT                : 29
ELST                 : 31
ENDINS               : 4 5 25 26 27 35 36 37 40 41
FORT                 : 33
FUNC                 : 14 16
ID                   : 4 5 7 14 25 26 27 36 37 38 51 52
IFT                  : 28
IGUAL                : 25 26
INT                  : 9
LCOR                 : 11 12 12 13 13 13
LLLAV                : 2 14 16 28 29 31 33 34 35
LPAR                 : 36 37 40 41 50 59
MAINT                : 16
MULTDIV              : 47
NUMERO               : 54
OPREL                : 60
ORT                  : 55
PUTST                : 40 41
RCOR                 : 11 12 12 13 13 13
RLLAV                : 2 14 16 28 29 31 33 34 35
RPAR                 : 36 37 40 41 50 59
SCANT                : 36 37
STRING               : 41 42
SUMRES               : 45
VAR                  : 2
WHILET               : 34 35
error                : 

Nonterminals, with rules where they appear

ARRAY                : 5 26 37 52
ASIGNACION           : 17
CTE                  : 49 60 60
DEFVAR               : 1
ELIF                 : 28 29
ELSE                 : 28
ESTATUTOS            : 14 16 17 18 19 20 21 22 23 28 29 31 33 34 35
EXPAR                : 11 12 12 13 13 13 25 26 40 43 45 50
EXPLOG               : 28 29 33 34 35 55 59
F                    : 47 48
FL                   : 57 58
FOR                  : 20
FUNCIONES            : 1 1 14
IF                   : 19
LLAMADAS             : 18
MAIN                 : 1
PUTS                 : 23
S                    : 0
SCAN                 : 22
T                    : 45 46 47
TIPO                 : 4 5
TL                   : 55 56 57
VARIABLE             : 2 4 5
WHILE                : 21
X                    : 4 5 7
Y                    : 36 37 38
Z                    : 40 41 42 43

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . DEFVAR FUNCIONES MAIN FUNCIONES
    (2) DEFVAR -> . VAR LLLAV VARIABLE RLLAV
    (3) DEFVAR -> .

    VAR             shift and go to state 3
    FUNC            reduce using rule 3 (DEFVAR -> .)

    S                              shift and go to state 1
    DEFVAR                         shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> DEFVAR . FUNCIONES MAIN FUNCIONES
    (14) FUNCIONES -> . FUNCIONES FUNC ID LLLAV ESTATUTOS RLLAV
    (15) FUNCIONES -> .

    FUNC            reduce using rule 15 (FUNCIONES -> .)

    FUNCIONES                      shift and go to state 4

state 3

    (2) DEFVAR -> VAR . LLLAV VARIABLE RLLAV

    LLLAV           shift and go to state 5


state 4

    (1) S -> DEFVAR FUNCIONES . MAIN FUNCIONES
    (14) FUNCIONES -> FUNCIONES . FUNC ID LLLAV ESTATUTOS RLLAV
    (16) MAIN -> . FUNC MAINT LLLAV ESTATUTOS RLLAV

    FUNC            shift and go to state 7

    MAIN                           shift and go to state 6

state 5

    (2) DEFVAR -> VAR LLLAV . VARIABLE RLLAV
    (4) VARIABLE -> . VARIABLE X ID TIPO ENDINS
    (5) VARIABLE -> . VARIABLE X ID TIPO ARRAY ENDINS
    (6) VARIABLE -> .

    RLLAV           reduce using rule 6 (VARIABLE -> .)
    ID              reduce using rule 6 (VARIABLE -> .)

    VARIABLE                       shift and go to state 8

state 6

    (1) S -> DEFVAR FUNCIONES MAIN . FUNCIONES
    (14) FUNCIONES -> . FUNCIONES FUNC ID LLLAV ESTATUTOS RLLAV
    (15) FUNCIONES -> .

    FUNC            reduce using rule 15 (FUNCIONES -> .)
    $end            reduce using rule 15 (FUNCIONES -> .)

    FUNCIONES                      shift and go to state 9

state 7

    (14) FUNCIONES -> FUNCIONES FUNC . ID LLLAV ESTATUTOS RLLAV
    (16) MAIN -> FUNC . MAINT LLLAV ESTATUTOS RLLAV

    ID              shift and go to state 10
    MAINT           shift and go to state 11


state 8

    (2) DEFVAR -> VAR LLLAV VARIABLE . RLLAV
    (4) VARIABLE -> VARIABLE . X ID TIPO ENDINS
    (5) VARIABLE -> VARIABLE . X ID TIPO ARRAY ENDINS
    (7) X -> . X ID COMA
    (8) X -> .

    RLLAV           shift and go to state 12
    ID              reduce using rule 8 (X -> .)

    X                              shift and go to state 13

state 9

    (1) S -> DEFVAR FUNCIONES MAIN FUNCIONES .
    (14) FUNCIONES -> FUNCIONES . FUNC ID LLLAV ESTATUTOS RLLAV

    $end            reduce using rule 1 (S -> DEFVAR FUNCIONES MAIN FUNCIONES .)
    FUNC            shift and go to state 14


state 10

    (14) FUNCIONES -> FUNCIONES FUNC ID . LLLAV ESTATUTOS RLLAV

    LLLAV           shift and go to state 15


state 11

    (16) MAIN -> FUNC MAINT . LLLAV ESTATUTOS RLLAV

    LLLAV           shift and go to state 16


state 12

    (2) DEFVAR -> VAR LLLAV VARIABLE RLLAV .

    FUNC            reduce using rule 2 (DEFVAR -> VAR LLLAV VARIABLE RLLAV .)


state 13

    (4) VARIABLE -> VARIABLE X . ID TIPO ENDINS
    (5) VARIABLE -> VARIABLE X . ID TIPO ARRAY ENDINS
    (7) X -> X . ID COMA

    ID              shift and go to state 17


state 14

    (14) FUNCIONES -> FUNCIONES FUNC . ID LLLAV ESTATUTOS RLLAV

    ID              shift and go to state 10


state 15

    (14) FUNCIONES -> FUNCIONES FUNC ID LLLAV . ESTATUTOS RLLAV
    (17) ESTATUTOS -> . ESTATUTOS ASIGNACION
    (18) ESTATUTOS -> . ESTATUTOS LLAMADAS
    (19) ESTATUTOS -> . ESTATUTOS IF
    (20) ESTATUTOS -> . ESTATUTOS FOR
    (21) ESTATUTOS -> . ESTATUTOS WHILE
    (22) ESTATUTOS -> . ESTATUTOS SCAN
    (23) ESTATUTOS -> . ESTATUTOS PUTS
    (24) ESTATUTOS -> .

    RLLAV           reduce using rule 24 (ESTATUTOS -> .)
    ID              reduce using rule 24 (ESTATUTOS -> .)
    CALL            reduce using rule 24 (ESTATUTOS -> .)
    IFT             reduce using rule 24 (ESTATUTOS -> .)
    FORT            reduce using rule 24 (ESTATUTOS -> .)
    WHILET          reduce using rule 24 (ESTATUTOS -> .)
    DOT             reduce using rule 24 (ESTATUTOS -> .)
    SCANT           reduce using rule 24 (ESTATUTOS -> .)
    PUTST           reduce using rule 24 (ESTATUTOS -> .)

    ESTATUTOS                      shift and go to state 18

state 16

    (16) MAIN -> FUNC MAINT LLLAV . ESTATUTOS RLLAV
    (17) ESTATUTOS -> . ESTATUTOS ASIGNACION
    (18) ESTATUTOS -> . ESTATUTOS LLAMADAS
    (19) ESTATUTOS -> . ESTATUTOS IF
    (20) ESTATUTOS -> . ESTATUTOS FOR
    (21) ESTATUTOS -> . ESTATUTOS WHILE
    (22) ESTATUTOS -> . ESTATUTOS SCAN
    (23) ESTATUTOS -> . ESTATUTOS PUTS
    (24) ESTATUTOS -> .

    RLLAV           reduce using rule 24 (ESTATUTOS -> .)
    ID              reduce using rule 24 (ESTATUTOS -> .)
    CALL            reduce using rule 24 (ESTATUTOS -> .)
    IFT             reduce using rule 24 (ESTATUTOS -> .)
    FORT            reduce using rule 24 (ESTATUTOS -> .)
    WHILET          reduce using rule 24 (ESTATUTOS -> .)
    DOT             reduce using rule 24 (ESTATUTOS -> .)
    SCANT           reduce using rule 24 (ESTATUTOS -> .)
    PUTST           reduce using rule 24 (ESTATUTOS -> .)

    ESTATUTOS                      shift and go to state 19

state 17

    (4) VARIABLE -> VARIABLE X ID . TIPO ENDINS
    (5) VARIABLE -> VARIABLE X ID . TIPO ARRAY ENDINS
    (7) X -> X ID . COMA
    (9) TIPO -> . INT
    (10) TIPO -> . DOUBLE

    COMA            shift and go to state 21
    INT             shift and go to state 22
    DOUBLE          shift and go to state 23

    TIPO                           shift and go to state 20

state 18

    (14) FUNCIONES -> FUNCIONES FUNC ID LLLAV ESTATUTOS . RLLAV
    (17) ESTATUTOS -> ESTATUTOS . ASIGNACION
    (18) ESTATUTOS -> ESTATUTOS . LLAMADAS
    (19) ESTATUTOS -> ESTATUTOS . IF
    (20) ESTATUTOS -> ESTATUTOS . FOR
    (21) ESTATUTOS -> ESTATUTOS . WHILE
    (22) ESTATUTOS -> ESTATUTOS . SCAN
    (23) ESTATUTOS -> ESTATUTOS . PUTS
    (25) ASIGNACION -> . ID IGUAL EXPAR ENDINS
    (26) ASIGNACION -> . ID ARRAY IGUAL EXPAR ENDINS
    (27) LLAMADAS -> . CALL ID ENDINS
    (28) IF -> . IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (33) FOR -> . FORT EXPLOG LLLAV ESTATUTOS RLLAV
    (34) WHILE -> . WHILET EXPLOG LLLAV ESTATUTOS RLLAV
    (35) WHILE -> . DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (36) SCAN -> . SCANT LPAR Y ID RPAR ENDINS
    (37) SCAN -> . SCANT LPAR Y ID ARRAY RPAR ENDINS
    (40) PUTS -> . PUTST LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> . PUTST LPAR Z STRING RPAR ENDINS

    RLLAV           shift and go to state 25
    ID              shift and go to state 24
    CALL            shift and go to state 33
    IFT             shift and go to state 34
    FORT            shift and go to state 35
    WHILET          shift and go to state 36
    DOT             shift and go to state 37
    SCANT           shift and go to state 38
    PUTST           shift and go to state 39

    ASIGNACION                     shift and go to state 26
    LLAMADAS                       shift and go to state 27
    IF                             shift and go to state 28
    FOR                            shift and go to state 29
    WHILE                          shift and go to state 30
    SCAN                           shift and go to state 31
    PUTS                           shift and go to state 32

state 19

    (16) MAIN -> FUNC MAINT LLLAV ESTATUTOS . RLLAV
    (17) ESTATUTOS -> ESTATUTOS . ASIGNACION
    (18) ESTATUTOS -> ESTATUTOS . LLAMADAS
    (19) ESTATUTOS -> ESTATUTOS . IF
    (20) ESTATUTOS -> ESTATUTOS . FOR
    (21) ESTATUTOS -> ESTATUTOS . WHILE
    (22) ESTATUTOS -> ESTATUTOS . SCAN
    (23) ESTATUTOS -> ESTATUTOS . PUTS
    (25) ASIGNACION -> . ID IGUAL EXPAR ENDINS
    (26) ASIGNACION -> . ID ARRAY IGUAL EXPAR ENDINS
    (27) LLAMADAS -> . CALL ID ENDINS
    (28) IF -> . IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (33) FOR -> . FORT EXPLOG LLLAV ESTATUTOS RLLAV
    (34) WHILE -> . WHILET EXPLOG LLLAV ESTATUTOS RLLAV
    (35) WHILE -> . DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (36) SCAN -> . SCANT LPAR Y ID RPAR ENDINS
    (37) SCAN -> . SCANT LPAR Y ID ARRAY RPAR ENDINS
    (40) PUTS -> . PUTST LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> . PUTST LPAR Z STRING RPAR ENDINS

    RLLAV           shift and go to state 40
    ID              shift and go to state 24
    CALL            shift and go to state 33
    IFT             shift and go to state 34
    FORT            shift and go to state 35
    WHILET          shift and go to state 36
    DOT             shift and go to state 37
    SCANT           shift and go to state 38
    PUTST           shift and go to state 39

    ASIGNACION                     shift and go to state 26
    LLAMADAS                       shift and go to state 27
    IF                             shift and go to state 28
    FOR                            shift and go to state 29
    WHILE                          shift and go to state 30
    SCAN                           shift and go to state 31
    PUTS                           shift and go to state 32

state 20

    (4) VARIABLE -> VARIABLE X ID TIPO . ENDINS
    (5) VARIABLE -> VARIABLE X ID TIPO . ARRAY ENDINS
    (11) ARRAY -> . LCOR EXPAR RCOR
    (12) ARRAY -> . LCOR EXPAR RCOR LCOR EXPAR RCOR
    (13) ARRAY -> . LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR

    ENDINS          shift and go to state 41
    LCOR            shift and go to state 43

    ARRAY                          shift and go to state 42

state 21

    (7) X -> X ID COMA .

    ID              reduce using rule 7 (X -> X ID COMA .)


state 22

    (9) TIPO -> INT .

    ENDINS          reduce using rule 9 (TIPO -> INT .)
    LCOR            reduce using rule 9 (TIPO -> INT .)


state 23

    (10) TIPO -> DOUBLE .

    ENDINS          reduce using rule 10 (TIPO -> DOUBLE .)
    LCOR            reduce using rule 10 (TIPO -> DOUBLE .)


state 24

    (25) ASIGNACION -> ID . IGUAL EXPAR ENDINS
    (26) ASIGNACION -> ID . ARRAY IGUAL EXPAR ENDINS
    (11) ARRAY -> . LCOR EXPAR RCOR
    (12) ARRAY -> . LCOR EXPAR RCOR LCOR EXPAR RCOR
    (13) ARRAY -> . LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR

    IGUAL           shift and go to state 44
    LCOR            shift and go to state 43

    ARRAY                          shift and go to state 45

state 25

    (14) FUNCIONES -> FUNCIONES FUNC ID LLLAV ESTATUTOS RLLAV .

    FUNC            reduce using rule 14 (FUNCIONES -> FUNCIONES FUNC ID LLLAV ESTATUTOS RLLAV .)
    $end            reduce using rule 14 (FUNCIONES -> FUNCIONES FUNC ID LLLAV ESTATUTOS RLLAV .)


state 26

    (17) ESTATUTOS -> ESTATUTOS ASIGNACION .

    RLLAV           reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)
    ID              reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)
    CALL            reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)
    IFT             reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)
    FORT            reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)
    WHILET          reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)
    DOT             reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)
    SCANT           reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)
    PUTST           reduce using rule 17 (ESTATUTOS -> ESTATUTOS ASIGNACION .)


state 27

    (18) ESTATUTOS -> ESTATUTOS LLAMADAS .

    RLLAV           reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)
    ID              reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)
    CALL            reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)
    IFT             reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)
    FORT            reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)
    WHILET          reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)
    DOT             reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)
    SCANT           reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)
    PUTST           reduce using rule 18 (ESTATUTOS -> ESTATUTOS LLAMADAS .)


state 28

    (19) ESTATUTOS -> ESTATUTOS IF .

    RLLAV           reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)
    ID              reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)
    CALL            reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)
    IFT             reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)
    FORT            reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)
    WHILET          reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)
    DOT             reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)
    SCANT           reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)
    PUTST           reduce using rule 19 (ESTATUTOS -> ESTATUTOS IF .)


state 29

    (20) ESTATUTOS -> ESTATUTOS FOR .

    RLLAV           reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)
    ID              reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)
    CALL            reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)
    IFT             reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)
    FORT            reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)
    WHILET          reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)
    DOT             reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)
    SCANT           reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)
    PUTST           reduce using rule 20 (ESTATUTOS -> ESTATUTOS FOR .)


state 30

    (21) ESTATUTOS -> ESTATUTOS WHILE .

    RLLAV           reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)
    ID              reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)
    CALL            reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)
    IFT             reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)
    FORT            reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)
    WHILET          reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)
    DOT             reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)
    SCANT           reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)
    PUTST           reduce using rule 21 (ESTATUTOS -> ESTATUTOS WHILE .)


state 31

    (22) ESTATUTOS -> ESTATUTOS SCAN .

    RLLAV           reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)
    ID              reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)
    CALL            reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)
    IFT             reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)
    FORT            reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)
    WHILET          reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)
    DOT             reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)
    SCANT           reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)
    PUTST           reduce using rule 22 (ESTATUTOS -> ESTATUTOS SCAN .)


state 32

    (23) ESTATUTOS -> ESTATUTOS PUTS .

    RLLAV           reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)
    ID              reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)
    CALL            reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)
    IFT             reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)
    FORT            reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)
    WHILET          reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)
    DOT             reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)
    SCANT           reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)
    PUTST           reduce using rule 23 (ESTATUTOS -> ESTATUTOS PUTS .)


state 33

    (27) LLAMADAS -> CALL . ID ENDINS

    ID              shift and go to state 46


state 34

    (28) IF -> IFT . EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (55) EXPLOG -> . EXPLOG ORT TL
    (56) EXPLOG -> . TL
    (57) TL -> . TL ANDT FL
    (58) TL -> . FL
    (59) FL -> . LPAR EXPLOG RPAR
    (60) FL -> . CTE OPREL CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 50
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPLOG                         shift and go to state 47
    TL                             shift and go to state 48
    FL                             shift and go to state 49
    CTE                            shift and go to state 51

state 35

    (33) FOR -> FORT . EXPLOG LLLAV ESTATUTOS RLLAV
    (55) EXPLOG -> . EXPLOG ORT TL
    (56) EXPLOG -> . TL
    (57) TL -> . TL ANDT FL
    (58) TL -> . FL
    (59) FL -> . LPAR EXPLOG RPAR
    (60) FL -> . CTE OPREL CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 50
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPLOG                         shift and go to state 55
    TL                             shift and go to state 48
    FL                             shift and go to state 49
    CTE                            shift and go to state 51

state 36

    (34) WHILE -> WHILET . EXPLOG LLLAV ESTATUTOS RLLAV
    (55) EXPLOG -> . EXPLOG ORT TL
    (56) EXPLOG -> . TL
    (57) TL -> . TL ANDT FL
    (58) TL -> . FL
    (59) FL -> . LPAR EXPLOG RPAR
    (60) FL -> . CTE OPREL CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 50
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPLOG                         shift and go to state 56
    TL                             shift and go to state 48
    FL                             shift and go to state 49
    CTE                            shift and go to state 51

state 37

    (35) WHILE -> DOT . LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS

    LLLAV           shift and go to state 57


state 38

    (36) SCAN -> SCANT . LPAR Y ID RPAR ENDINS
    (37) SCAN -> SCANT . LPAR Y ID ARRAY RPAR ENDINS

    LPAR            shift and go to state 58


state 39

    (40) PUTS -> PUTST . LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> PUTST . LPAR Z STRING RPAR ENDINS

    LPAR            shift and go to state 59


state 40

    (16) MAIN -> FUNC MAINT LLLAV ESTATUTOS RLLAV .

    FUNC            reduce using rule 16 (MAIN -> FUNC MAINT LLLAV ESTATUTOS RLLAV .)
    $end            reduce using rule 16 (MAIN -> FUNC MAINT LLLAV ESTATUTOS RLLAV .)


state 41

    (4) VARIABLE -> VARIABLE X ID TIPO ENDINS .

    RLLAV           reduce using rule 4 (VARIABLE -> VARIABLE X ID TIPO ENDINS .)
    ID              reduce using rule 4 (VARIABLE -> VARIABLE X ID TIPO ENDINS .)


state 42

    (5) VARIABLE -> VARIABLE X ID TIPO ARRAY . ENDINS

    ENDINS          shift and go to state 60


state 43

    (11) ARRAY -> LCOR . EXPAR RCOR
    (12) ARRAY -> LCOR . EXPAR RCOR LCOR EXPAR RCOR
    (13) ARRAY -> LCOR . EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR
    (45) EXPAR -> . EXPAR SUMRES T
    (46) EXPAR -> . T
    (47) T -> . T MULTDIV F
    (48) T -> . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPAR                          shift and go to state 61
    T                              shift and go to state 62
    F                              shift and go to state 63
    CTE                            shift and go to state 64

state 44

    (25) ASIGNACION -> ID IGUAL . EXPAR ENDINS
    (45) EXPAR -> . EXPAR SUMRES T
    (46) EXPAR -> . T
    (47) T -> . T MULTDIV F
    (48) T -> . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPAR                          shift and go to state 66
    T                              shift and go to state 62
    F                              shift and go to state 63
    CTE                            shift and go to state 64

state 45

    (26) ASIGNACION -> ID ARRAY . IGUAL EXPAR ENDINS

    IGUAL           shift and go to state 67


state 46

    (27) LLAMADAS -> CALL ID . ENDINS

    ENDINS          shift and go to state 68


state 47

    (28) IF -> IFT EXPLOG . LLLAV ESTATUTOS RLLAV ELIF ELSE
    (55) EXPLOG -> EXPLOG . ORT TL

    LLLAV           shift and go to state 69
    ORT             shift and go to state 70


state 48

    (56) EXPLOG -> TL .
    (57) TL -> TL . ANDT FL

    LLLAV           reduce using rule 56 (EXPLOG -> TL .)
    ORT             reduce using rule 56 (EXPLOG -> TL .)
    RPAR            reduce using rule 56 (EXPLOG -> TL .)
    ENDINS          reduce using rule 56 (EXPLOG -> TL .)
    ANDT            shift and go to state 71


state 49

    (58) TL -> FL .

    ANDT            reduce using rule 58 (TL -> FL .)
    LLLAV           reduce using rule 58 (TL -> FL .)
    ORT             reduce using rule 58 (TL -> FL .)
    RPAR            reduce using rule 58 (TL -> FL .)
    ENDINS          reduce using rule 58 (TL -> FL .)


state 50

    (59) FL -> LPAR . EXPLOG RPAR
    (55) EXPLOG -> . EXPLOG ORT TL
    (56) EXPLOG -> . TL
    (57) TL -> . TL ANDT FL
    (58) TL -> . FL
    (59) FL -> . LPAR EXPLOG RPAR
    (60) FL -> . CTE OPREL CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 50
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPLOG                         shift and go to state 72
    TL                             shift and go to state 48
    FL                             shift and go to state 49
    CTE                            shift and go to state 51

state 51

    (60) FL -> CTE . OPREL CTE

    OPREL           shift and go to state 73


state 52

    (51) CTE -> ID .
    (52) CTE -> ID . ARRAY
    (11) ARRAY -> . LCOR EXPAR RCOR
    (12) ARRAY -> . LCOR EXPAR RCOR LCOR EXPAR RCOR
    (13) ARRAY -> . LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR

    OPREL           reduce using rule 51 (CTE -> ID .)
    MULTDIV         reduce using rule 51 (CTE -> ID .)
    RCOR            reduce using rule 51 (CTE -> ID .)
    SUMRES          reduce using rule 51 (CTE -> ID .)
    ENDINS          reduce using rule 51 (CTE -> ID .)
    RPAR            reduce using rule 51 (CTE -> ID .)
    ANDT            reduce using rule 51 (CTE -> ID .)
    LLLAV           reduce using rule 51 (CTE -> ID .)
    ORT             reduce using rule 51 (CTE -> ID .)
    COMA            reduce using rule 51 (CTE -> ID .)
    LCOR            shift and go to state 43

    ARRAY                          shift and go to state 74

state 53

    (53) CTE -> DNUMERO .

    OPREL           reduce using rule 53 (CTE -> DNUMERO .)
    MULTDIV         reduce using rule 53 (CTE -> DNUMERO .)
    RCOR            reduce using rule 53 (CTE -> DNUMERO .)
    SUMRES          reduce using rule 53 (CTE -> DNUMERO .)
    ENDINS          reduce using rule 53 (CTE -> DNUMERO .)
    RPAR            reduce using rule 53 (CTE -> DNUMERO .)
    ANDT            reduce using rule 53 (CTE -> DNUMERO .)
    LLLAV           reduce using rule 53 (CTE -> DNUMERO .)
    ORT             reduce using rule 53 (CTE -> DNUMERO .)
    COMA            reduce using rule 53 (CTE -> DNUMERO .)


state 54

    (54) CTE -> NUMERO .

    OPREL           reduce using rule 54 (CTE -> NUMERO .)
    MULTDIV         reduce using rule 54 (CTE -> NUMERO .)
    RCOR            reduce using rule 54 (CTE -> NUMERO .)
    SUMRES          reduce using rule 54 (CTE -> NUMERO .)
    ENDINS          reduce using rule 54 (CTE -> NUMERO .)
    RPAR            reduce using rule 54 (CTE -> NUMERO .)
    ANDT            reduce using rule 54 (CTE -> NUMERO .)
    LLLAV           reduce using rule 54 (CTE -> NUMERO .)
    ORT             reduce using rule 54 (CTE -> NUMERO .)
    COMA            reduce using rule 54 (CTE -> NUMERO .)


state 55

    (33) FOR -> FORT EXPLOG . LLLAV ESTATUTOS RLLAV
    (55) EXPLOG -> EXPLOG . ORT TL

    LLLAV           shift and go to state 75
    ORT             shift and go to state 70


state 56

    (34) WHILE -> WHILET EXPLOG . LLLAV ESTATUTOS RLLAV
    (55) EXPLOG -> EXPLOG . ORT TL

    LLLAV           shift and go to state 76
    ORT             shift and go to state 70


state 57

    (35) WHILE -> DOT LLLAV . ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (17) ESTATUTOS -> . ESTATUTOS ASIGNACION
    (18) ESTATUTOS -> . ESTATUTOS LLAMADAS
    (19) ESTATUTOS -> . ESTATUTOS IF
    (20) ESTATUTOS -> . ESTATUTOS FOR
    (21) ESTATUTOS -> . ESTATUTOS WHILE
    (22) ESTATUTOS -> . ESTATUTOS SCAN
    (23) ESTATUTOS -> . ESTATUTOS PUTS
    (24) ESTATUTOS -> .

    RLLAV           reduce using rule 24 (ESTATUTOS -> .)
    ID              reduce using rule 24 (ESTATUTOS -> .)
    CALL            reduce using rule 24 (ESTATUTOS -> .)
    IFT             reduce using rule 24 (ESTATUTOS -> .)
    FORT            reduce using rule 24 (ESTATUTOS -> .)
    WHILET          reduce using rule 24 (ESTATUTOS -> .)
    DOT             reduce using rule 24 (ESTATUTOS -> .)
    SCANT           reduce using rule 24 (ESTATUTOS -> .)
    PUTST           reduce using rule 24 (ESTATUTOS -> .)

    ESTATUTOS                      shift and go to state 77

state 58

    (36) SCAN -> SCANT LPAR . Y ID RPAR ENDINS
    (37) SCAN -> SCANT LPAR . Y ID ARRAY RPAR ENDINS
    (38) Y -> . Y ID COMA
    (39) Y -> .

    ID              reduce using rule 39 (Y -> .)

    Y                              shift and go to state 78

state 59

    (40) PUTS -> PUTST LPAR . Z EXPAR RPAR ENDINS
    (41) PUTS -> PUTST LPAR . Z STRING RPAR ENDINS
    (42) Z -> . Z STRING COMA
    (43) Z -> . Z EXPAR COMA
    (44) Z -> .

    STRING          reduce using rule 44 (Z -> .)
    LPAR            reduce using rule 44 (Z -> .)
    ID              reduce using rule 44 (Z -> .)
    DNUMERO         reduce using rule 44 (Z -> .)
    NUMERO          reduce using rule 44 (Z -> .)

    Z                              shift and go to state 79

state 60

    (5) VARIABLE -> VARIABLE X ID TIPO ARRAY ENDINS .

    RLLAV           reduce using rule 5 (VARIABLE -> VARIABLE X ID TIPO ARRAY ENDINS .)
    ID              reduce using rule 5 (VARIABLE -> VARIABLE X ID TIPO ARRAY ENDINS .)


state 61

    (11) ARRAY -> LCOR EXPAR . RCOR
    (12) ARRAY -> LCOR EXPAR . RCOR LCOR EXPAR RCOR
    (13) ARRAY -> LCOR EXPAR . RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR
    (45) EXPAR -> EXPAR . SUMRES T

    RCOR            shift and go to state 80
    SUMRES          shift and go to state 81


state 62

    (46) EXPAR -> T .
    (47) T -> T . MULTDIV F

    RCOR            reduce using rule 46 (EXPAR -> T .)
    SUMRES          reduce using rule 46 (EXPAR -> T .)
    ENDINS          reduce using rule 46 (EXPAR -> T .)
    RPAR            reduce using rule 46 (EXPAR -> T .)
    COMA            reduce using rule 46 (EXPAR -> T .)
    MULTDIV         shift and go to state 82


state 63

    (48) T -> F .

    MULTDIV         reduce using rule 48 (T -> F .)
    RCOR            reduce using rule 48 (T -> F .)
    SUMRES          reduce using rule 48 (T -> F .)
    ENDINS          reduce using rule 48 (T -> F .)
    RPAR            reduce using rule 48 (T -> F .)
    COMA            reduce using rule 48 (T -> F .)


state 64

    (49) F -> CTE .

    MULTDIV         reduce using rule 49 (F -> CTE .)
    RCOR            reduce using rule 49 (F -> CTE .)
    SUMRES          reduce using rule 49 (F -> CTE .)
    ENDINS          reduce using rule 49 (F -> CTE .)
    RPAR            reduce using rule 49 (F -> CTE .)
    COMA            reduce using rule 49 (F -> CTE .)


state 65

    (50) F -> LPAR . EXPAR RPAR
    (45) EXPAR -> . EXPAR SUMRES T
    (46) EXPAR -> . T
    (47) T -> . T MULTDIV F
    (48) T -> . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPAR                          shift and go to state 83
    T                              shift and go to state 62
    F                              shift and go to state 63
    CTE                            shift and go to state 64

state 66

    (25) ASIGNACION -> ID IGUAL EXPAR . ENDINS
    (45) EXPAR -> EXPAR . SUMRES T

    ENDINS          shift and go to state 84
    SUMRES          shift and go to state 81


state 67

    (26) ASIGNACION -> ID ARRAY IGUAL . EXPAR ENDINS
    (45) EXPAR -> . EXPAR SUMRES T
    (46) EXPAR -> . T
    (47) T -> . T MULTDIV F
    (48) T -> . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPAR                          shift and go to state 85
    T                              shift and go to state 62
    F                              shift and go to state 63
    CTE                            shift and go to state 64

state 68

    (27) LLAMADAS -> CALL ID ENDINS .

    RLLAV           reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)
    ID              reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)
    CALL            reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)
    IFT             reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)
    FORT            reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)
    WHILET          reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)
    DOT             reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)
    SCANT           reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)
    PUTST           reduce using rule 27 (LLAMADAS -> CALL ID ENDINS .)


state 69

    (28) IF -> IFT EXPLOG LLLAV . ESTATUTOS RLLAV ELIF ELSE
    (17) ESTATUTOS -> . ESTATUTOS ASIGNACION
    (18) ESTATUTOS -> . ESTATUTOS LLAMADAS
    (19) ESTATUTOS -> . ESTATUTOS IF
    (20) ESTATUTOS -> . ESTATUTOS FOR
    (21) ESTATUTOS -> . ESTATUTOS WHILE
    (22) ESTATUTOS -> . ESTATUTOS SCAN
    (23) ESTATUTOS -> . ESTATUTOS PUTS
    (24) ESTATUTOS -> .

    RLLAV           reduce using rule 24 (ESTATUTOS -> .)
    ID              reduce using rule 24 (ESTATUTOS -> .)
    CALL            reduce using rule 24 (ESTATUTOS -> .)
    IFT             reduce using rule 24 (ESTATUTOS -> .)
    FORT            reduce using rule 24 (ESTATUTOS -> .)
    WHILET          reduce using rule 24 (ESTATUTOS -> .)
    DOT             reduce using rule 24 (ESTATUTOS -> .)
    SCANT           reduce using rule 24 (ESTATUTOS -> .)
    PUTST           reduce using rule 24 (ESTATUTOS -> .)

    ESTATUTOS                      shift and go to state 86

state 70

    (55) EXPLOG -> EXPLOG ORT . TL
    (57) TL -> . TL ANDT FL
    (58) TL -> . FL
    (59) FL -> . LPAR EXPLOG RPAR
    (60) FL -> . CTE OPREL CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 50
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    TL                             shift and go to state 87
    FL                             shift and go to state 49
    CTE                            shift and go to state 51

state 71

    (57) TL -> TL ANDT . FL
    (59) FL -> . LPAR EXPLOG RPAR
    (60) FL -> . CTE OPREL CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 50
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    FL                             shift and go to state 88
    CTE                            shift and go to state 51

state 72

    (59) FL -> LPAR EXPLOG . RPAR
    (55) EXPLOG -> EXPLOG . ORT TL

    RPAR            shift and go to state 89
    ORT             shift and go to state 70


state 73

    (60) FL -> CTE OPREL . CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    CTE                            shift and go to state 90

state 74

    (52) CTE -> ID ARRAY .

    OPREL           reduce using rule 52 (CTE -> ID ARRAY .)
    MULTDIV         reduce using rule 52 (CTE -> ID ARRAY .)
    RCOR            reduce using rule 52 (CTE -> ID ARRAY .)
    SUMRES          reduce using rule 52 (CTE -> ID ARRAY .)
    ENDINS          reduce using rule 52 (CTE -> ID ARRAY .)
    RPAR            reduce using rule 52 (CTE -> ID ARRAY .)
    ANDT            reduce using rule 52 (CTE -> ID ARRAY .)
    LLLAV           reduce using rule 52 (CTE -> ID ARRAY .)
    ORT             reduce using rule 52 (CTE -> ID ARRAY .)
    COMA            reduce using rule 52 (CTE -> ID ARRAY .)


state 75

    (33) FOR -> FORT EXPLOG LLLAV . ESTATUTOS RLLAV
    (17) ESTATUTOS -> . ESTATUTOS ASIGNACION
    (18) ESTATUTOS -> . ESTATUTOS LLAMADAS
    (19) ESTATUTOS -> . ESTATUTOS IF
    (20) ESTATUTOS -> . ESTATUTOS FOR
    (21) ESTATUTOS -> . ESTATUTOS WHILE
    (22) ESTATUTOS -> . ESTATUTOS SCAN
    (23) ESTATUTOS -> . ESTATUTOS PUTS
    (24) ESTATUTOS -> .

    RLLAV           reduce using rule 24 (ESTATUTOS -> .)
    ID              reduce using rule 24 (ESTATUTOS -> .)
    CALL            reduce using rule 24 (ESTATUTOS -> .)
    IFT             reduce using rule 24 (ESTATUTOS -> .)
    FORT            reduce using rule 24 (ESTATUTOS -> .)
    WHILET          reduce using rule 24 (ESTATUTOS -> .)
    DOT             reduce using rule 24 (ESTATUTOS -> .)
    SCANT           reduce using rule 24 (ESTATUTOS -> .)
    PUTST           reduce using rule 24 (ESTATUTOS -> .)

    ESTATUTOS                      shift and go to state 91

state 76

    (34) WHILE -> WHILET EXPLOG LLLAV . ESTATUTOS RLLAV
    (17) ESTATUTOS -> . ESTATUTOS ASIGNACION
    (18) ESTATUTOS -> . ESTATUTOS LLAMADAS
    (19) ESTATUTOS -> . ESTATUTOS IF
    (20) ESTATUTOS -> . ESTATUTOS FOR
    (21) ESTATUTOS -> . ESTATUTOS WHILE
    (22) ESTATUTOS -> . ESTATUTOS SCAN
    (23) ESTATUTOS -> . ESTATUTOS PUTS
    (24) ESTATUTOS -> .

    RLLAV           reduce using rule 24 (ESTATUTOS -> .)
    ID              reduce using rule 24 (ESTATUTOS -> .)
    CALL            reduce using rule 24 (ESTATUTOS -> .)
    IFT             reduce using rule 24 (ESTATUTOS -> .)
    FORT            reduce using rule 24 (ESTATUTOS -> .)
    WHILET          reduce using rule 24 (ESTATUTOS -> .)
    DOT             reduce using rule 24 (ESTATUTOS -> .)
    SCANT           reduce using rule 24 (ESTATUTOS -> .)
    PUTST           reduce using rule 24 (ESTATUTOS -> .)

    ESTATUTOS                      shift and go to state 92

state 77

    (35) WHILE -> DOT LLLAV ESTATUTOS . RLLAV WHILET EXPLOG ENDINS
    (17) ESTATUTOS -> ESTATUTOS . ASIGNACION
    (18) ESTATUTOS -> ESTATUTOS . LLAMADAS
    (19) ESTATUTOS -> ESTATUTOS . IF
    (20) ESTATUTOS -> ESTATUTOS . FOR
    (21) ESTATUTOS -> ESTATUTOS . WHILE
    (22) ESTATUTOS -> ESTATUTOS . SCAN
    (23) ESTATUTOS -> ESTATUTOS . PUTS
    (25) ASIGNACION -> . ID IGUAL EXPAR ENDINS
    (26) ASIGNACION -> . ID ARRAY IGUAL EXPAR ENDINS
    (27) LLAMADAS -> . CALL ID ENDINS
    (28) IF -> . IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (33) FOR -> . FORT EXPLOG LLLAV ESTATUTOS RLLAV
    (34) WHILE -> . WHILET EXPLOG LLLAV ESTATUTOS RLLAV
    (35) WHILE -> . DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (36) SCAN -> . SCANT LPAR Y ID RPAR ENDINS
    (37) SCAN -> . SCANT LPAR Y ID ARRAY RPAR ENDINS
    (40) PUTS -> . PUTST LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> . PUTST LPAR Z STRING RPAR ENDINS

    RLLAV           shift and go to state 93
    ID              shift and go to state 24
    CALL            shift and go to state 33
    IFT             shift and go to state 34
    FORT            shift and go to state 35
    WHILET          shift and go to state 36
    DOT             shift and go to state 37
    SCANT           shift and go to state 38
    PUTST           shift and go to state 39

    ASIGNACION                     shift and go to state 26
    LLAMADAS                       shift and go to state 27
    IF                             shift and go to state 28
    FOR                            shift and go to state 29
    WHILE                          shift and go to state 30
    SCAN                           shift and go to state 31
    PUTS                           shift and go to state 32

state 78

    (36) SCAN -> SCANT LPAR Y . ID RPAR ENDINS
    (37) SCAN -> SCANT LPAR Y . ID ARRAY RPAR ENDINS
    (38) Y -> Y . ID COMA

    ID              shift and go to state 94


state 79

    (40) PUTS -> PUTST LPAR Z . EXPAR RPAR ENDINS
    (41) PUTS -> PUTST LPAR Z . STRING RPAR ENDINS
    (42) Z -> Z . STRING COMA
    (43) Z -> Z . EXPAR COMA
    (45) EXPAR -> . EXPAR SUMRES T
    (46) EXPAR -> . T
    (47) T -> . T MULTDIV F
    (48) T -> . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    STRING          shift and go to state 96
    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPAR                          shift and go to state 95
    T                              shift and go to state 62
    F                              shift and go to state 63
    CTE                            shift and go to state 64

state 80

    (11) ARRAY -> LCOR EXPAR RCOR .
    (12) ARRAY -> LCOR EXPAR RCOR . LCOR EXPAR RCOR
    (13) ARRAY -> LCOR EXPAR RCOR . LCOR EXPAR RCOR LCOR EXPAR RCOR

    ENDINS          reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    IGUAL           reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    OPREL           reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    MULTDIV         reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    RCOR            reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    SUMRES          reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    RPAR            reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    ANDT            reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    LLLAV           reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    ORT             reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    COMA            reduce using rule 11 (ARRAY -> LCOR EXPAR RCOR .)
    LCOR            shift and go to state 97


state 81

    (45) EXPAR -> EXPAR SUMRES . T
    (47) T -> . T MULTDIV F
    (48) T -> . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    T                              shift and go to state 98
    F                              shift and go to state 63
    CTE                            shift and go to state 64

state 82

    (47) T -> T MULTDIV . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    F                              shift and go to state 99
    CTE                            shift and go to state 64

state 83

    (50) F -> LPAR EXPAR . RPAR
    (45) EXPAR -> EXPAR . SUMRES T

    RPAR            shift and go to state 100
    SUMRES          shift and go to state 81


state 84

    (25) ASIGNACION -> ID IGUAL EXPAR ENDINS .

    RLLAV           reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)
    ID              reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)
    CALL            reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)
    IFT             reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)
    FORT            reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)
    WHILET          reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)
    DOT             reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)
    SCANT           reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)
    PUTST           reduce using rule 25 (ASIGNACION -> ID IGUAL EXPAR ENDINS .)


state 85

    (26) ASIGNACION -> ID ARRAY IGUAL EXPAR . ENDINS
    (45) EXPAR -> EXPAR . SUMRES T

    ENDINS          shift and go to state 101
    SUMRES          shift and go to state 81


state 86

    (28) IF -> IFT EXPLOG LLLAV ESTATUTOS . RLLAV ELIF ELSE
    (17) ESTATUTOS -> ESTATUTOS . ASIGNACION
    (18) ESTATUTOS -> ESTATUTOS . LLAMADAS
    (19) ESTATUTOS -> ESTATUTOS . IF
    (20) ESTATUTOS -> ESTATUTOS . FOR
    (21) ESTATUTOS -> ESTATUTOS . WHILE
    (22) ESTATUTOS -> ESTATUTOS . SCAN
    (23) ESTATUTOS -> ESTATUTOS . PUTS
    (25) ASIGNACION -> . ID IGUAL EXPAR ENDINS
    (26) ASIGNACION -> . ID ARRAY IGUAL EXPAR ENDINS
    (27) LLAMADAS -> . CALL ID ENDINS
    (28) IF -> . IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (33) FOR -> . FORT EXPLOG LLLAV ESTATUTOS RLLAV
    (34) WHILE -> . WHILET EXPLOG LLLAV ESTATUTOS RLLAV
    (35) WHILE -> . DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (36) SCAN -> . SCANT LPAR Y ID RPAR ENDINS
    (37) SCAN -> . SCANT LPAR Y ID ARRAY RPAR ENDINS
    (40) PUTS -> . PUTST LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> . PUTST LPAR Z STRING RPAR ENDINS

    RLLAV           shift and go to state 102
    ID              shift and go to state 24
    CALL            shift and go to state 33
    IFT             shift and go to state 34
    FORT            shift and go to state 35
    WHILET          shift and go to state 36
    DOT             shift and go to state 37
    SCANT           shift and go to state 38
    PUTST           shift and go to state 39

    ASIGNACION                     shift and go to state 26
    LLAMADAS                       shift and go to state 27
    IF                             shift and go to state 28
    FOR                            shift and go to state 29
    WHILE                          shift and go to state 30
    SCAN                           shift and go to state 31
    PUTS                           shift and go to state 32

state 87

    (55) EXPLOG -> EXPLOG ORT TL .
    (57) TL -> TL . ANDT FL

    LLLAV           reduce using rule 55 (EXPLOG -> EXPLOG ORT TL .)
    ORT             reduce using rule 55 (EXPLOG -> EXPLOG ORT TL .)
    RPAR            reduce using rule 55 (EXPLOG -> EXPLOG ORT TL .)
    ENDINS          reduce using rule 55 (EXPLOG -> EXPLOG ORT TL .)
    ANDT            shift and go to state 71


state 88

    (57) TL -> TL ANDT FL .

    ANDT            reduce using rule 57 (TL -> TL ANDT FL .)
    LLLAV           reduce using rule 57 (TL -> TL ANDT FL .)
    ORT             reduce using rule 57 (TL -> TL ANDT FL .)
    RPAR            reduce using rule 57 (TL -> TL ANDT FL .)
    ENDINS          reduce using rule 57 (TL -> TL ANDT FL .)


state 89

    (59) FL -> LPAR EXPLOG RPAR .

    ANDT            reduce using rule 59 (FL -> LPAR EXPLOG RPAR .)
    LLLAV           reduce using rule 59 (FL -> LPAR EXPLOG RPAR .)
    ORT             reduce using rule 59 (FL -> LPAR EXPLOG RPAR .)
    RPAR            reduce using rule 59 (FL -> LPAR EXPLOG RPAR .)
    ENDINS          reduce using rule 59 (FL -> LPAR EXPLOG RPAR .)


state 90

    (60) FL -> CTE OPREL CTE .

    ANDT            reduce using rule 60 (FL -> CTE OPREL CTE .)
    LLLAV           reduce using rule 60 (FL -> CTE OPREL CTE .)
    ORT             reduce using rule 60 (FL -> CTE OPREL CTE .)
    RPAR            reduce using rule 60 (FL -> CTE OPREL CTE .)
    ENDINS          reduce using rule 60 (FL -> CTE OPREL CTE .)


state 91

    (33) FOR -> FORT EXPLOG LLLAV ESTATUTOS . RLLAV
    (17) ESTATUTOS -> ESTATUTOS . ASIGNACION
    (18) ESTATUTOS -> ESTATUTOS . LLAMADAS
    (19) ESTATUTOS -> ESTATUTOS . IF
    (20) ESTATUTOS -> ESTATUTOS . FOR
    (21) ESTATUTOS -> ESTATUTOS . WHILE
    (22) ESTATUTOS -> ESTATUTOS . SCAN
    (23) ESTATUTOS -> ESTATUTOS . PUTS
    (25) ASIGNACION -> . ID IGUAL EXPAR ENDINS
    (26) ASIGNACION -> . ID ARRAY IGUAL EXPAR ENDINS
    (27) LLAMADAS -> . CALL ID ENDINS
    (28) IF -> . IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (33) FOR -> . FORT EXPLOG LLLAV ESTATUTOS RLLAV
    (34) WHILE -> . WHILET EXPLOG LLLAV ESTATUTOS RLLAV
    (35) WHILE -> . DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (36) SCAN -> . SCANT LPAR Y ID RPAR ENDINS
    (37) SCAN -> . SCANT LPAR Y ID ARRAY RPAR ENDINS
    (40) PUTS -> . PUTST LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> . PUTST LPAR Z STRING RPAR ENDINS

    RLLAV           shift and go to state 103
    ID              shift and go to state 24
    CALL            shift and go to state 33
    IFT             shift and go to state 34
    FORT            shift and go to state 35
    WHILET          shift and go to state 36
    DOT             shift and go to state 37
    SCANT           shift and go to state 38
    PUTST           shift and go to state 39

    ASIGNACION                     shift and go to state 26
    LLAMADAS                       shift and go to state 27
    IF                             shift and go to state 28
    FOR                            shift and go to state 29
    WHILE                          shift and go to state 30
    SCAN                           shift and go to state 31
    PUTS                           shift and go to state 32

state 92

    (34) WHILE -> WHILET EXPLOG LLLAV ESTATUTOS . RLLAV
    (17) ESTATUTOS -> ESTATUTOS . ASIGNACION
    (18) ESTATUTOS -> ESTATUTOS . LLAMADAS
    (19) ESTATUTOS -> ESTATUTOS . IF
    (20) ESTATUTOS -> ESTATUTOS . FOR
    (21) ESTATUTOS -> ESTATUTOS . WHILE
    (22) ESTATUTOS -> ESTATUTOS . SCAN
    (23) ESTATUTOS -> ESTATUTOS . PUTS
    (25) ASIGNACION -> . ID IGUAL EXPAR ENDINS
    (26) ASIGNACION -> . ID ARRAY IGUAL EXPAR ENDINS
    (27) LLAMADAS -> . CALL ID ENDINS
    (28) IF -> . IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (33) FOR -> . FORT EXPLOG LLLAV ESTATUTOS RLLAV
    (34) WHILE -> . WHILET EXPLOG LLLAV ESTATUTOS RLLAV
    (35) WHILE -> . DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (36) SCAN -> . SCANT LPAR Y ID RPAR ENDINS
    (37) SCAN -> . SCANT LPAR Y ID ARRAY RPAR ENDINS
    (40) PUTS -> . PUTST LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> . PUTST LPAR Z STRING RPAR ENDINS

    RLLAV           shift and go to state 104
    ID              shift and go to state 24
    CALL            shift and go to state 33
    IFT             shift and go to state 34
    FORT            shift and go to state 35
    WHILET          shift and go to state 36
    DOT             shift and go to state 37
    SCANT           shift and go to state 38
    PUTST           shift and go to state 39

    ASIGNACION                     shift and go to state 26
    LLAMADAS                       shift and go to state 27
    IF                             shift and go to state 28
    FOR                            shift and go to state 29
    WHILE                          shift and go to state 30
    SCAN                           shift and go to state 31
    PUTS                           shift and go to state 32

state 93

    (35) WHILE -> DOT LLLAV ESTATUTOS RLLAV . WHILET EXPLOG ENDINS

    WHILET          shift and go to state 105


state 94

    (36) SCAN -> SCANT LPAR Y ID . RPAR ENDINS
    (37) SCAN -> SCANT LPAR Y ID . ARRAY RPAR ENDINS
    (38) Y -> Y ID . COMA
    (11) ARRAY -> . LCOR EXPAR RCOR
    (12) ARRAY -> . LCOR EXPAR RCOR LCOR EXPAR RCOR
    (13) ARRAY -> . LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR

    RPAR            shift and go to state 106
    COMA            shift and go to state 108
    LCOR            shift and go to state 43

    ARRAY                          shift and go to state 107

state 95

    (40) PUTS -> PUTST LPAR Z EXPAR . RPAR ENDINS
    (43) Z -> Z EXPAR . COMA
    (45) EXPAR -> EXPAR . SUMRES T

    RPAR            shift and go to state 109
    COMA            shift and go to state 110
    SUMRES          shift and go to state 81


state 96

    (41) PUTS -> PUTST LPAR Z STRING . RPAR ENDINS
    (42) Z -> Z STRING . COMA

    RPAR            shift and go to state 111
    COMA            shift and go to state 112


state 97

    (12) ARRAY -> LCOR EXPAR RCOR LCOR . EXPAR RCOR
    (13) ARRAY -> LCOR EXPAR RCOR LCOR . EXPAR RCOR LCOR EXPAR RCOR
    (45) EXPAR -> . EXPAR SUMRES T
    (46) EXPAR -> . T
    (47) T -> . T MULTDIV F
    (48) T -> . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPAR                          shift and go to state 113
    T                              shift and go to state 62
    F                              shift and go to state 63
    CTE                            shift and go to state 64

state 98

    (45) EXPAR -> EXPAR SUMRES T .
    (47) T -> T . MULTDIV F

    RCOR            reduce using rule 45 (EXPAR -> EXPAR SUMRES T .)
    SUMRES          reduce using rule 45 (EXPAR -> EXPAR SUMRES T .)
    ENDINS          reduce using rule 45 (EXPAR -> EXPAR SUMRES T .)
    RPAR            reduce using rule 45 (EXPAR -> EXPAR SUMRES T .)
    COMA            reduce using rule 45 (EXPAR -> EXPAR SUMRES T .)
    MULTDIV         shift and go to state 82


state 99

    (47) T -> T MULTDIV F .

    MULTDIV         reduce using rule 47 (T -> T MULTDIV F .)
    RCOR            reduce using rule 47 (T -> T MULTDIV F .)
    SUMRES          reduce using rule 47 (T -> T MULTDIV F .)
    ENDINS          reduce using rule 47 (T -> T MULTDIV F .)
    RPAR            reduce using rule 47 (T -> T MULTDIV F .)
    COMA            reduce using rule 47 (T -> T MULTDIV F .)


state 100

    (50) F -> LPAR EXPAR RPAR .

    MULTDIV         reduce using rule 50 (F -> LPAR EXPAR RPAR .)
    RCOR            reduce using rule 50 (F -> LPAR EXPAR RPAR .)
    SUMRES          reduce using rule 50 (F -> LPAR EXPAR RPAR .)
    ENDINS          reduce using rule 50 (F -> LPAR EXPAR RPAR .)
    RPAR            reduce using rule 50 (F -> LPAR EXPAR RPAR .)
    COMA            reduce using rule 50 (F -> LPAR EXPAR RPAR .)


state 101

    (26) ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .

    RLLAV           reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)
    ID              reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)
    CALL            reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)
    IFT             reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)
    FORT            reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)
    WHILET          reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)
    DOT             reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)
    SCANT           reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)
    PUTST           reduce using rule 26 (ASIGNACION -> ID ARRAY IGUAL EXPAR ENDINS .)


state 102

    (28) IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV . ELIF ELSE
    (29) ELIF -> . ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV
    (30) ELIF -> .

    ELIFT           reduce using rule 30 (ELIF -> .)
    ELST            reduce using rule 30 (ELIF -> .)
    RLLAV           reduce using rule 30 (ELIF -> .)
    ID              reduce using rule 30 (ELIF -> .)
    CALL            reduce using rule 30 (ELIF -> .)
    IFT             reduce using rule 30 (ELIF -> .)
    FORT            reduce using rule 30 (ELIF -> .)
    WHILET          reduce using rule 30 (ELIF -> .)
    DOT             reduce using rule 30 (ELIF -> .)
    SCANT           reduce using rule 30 (ELIF -> .)
    PUTST           reduce using rule 30 (ELIF -> .)

    ELIF                           shift and go to state 114

state 103

    (33) FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .

    RLLAV           reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)
    ID              reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)
    CALL            reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)
    IFT             reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)
    FORT            reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)
    WHILET          reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)
    DOT             reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)
    SCANT           reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)
    PUTST           reduce using rule 33 (FOR -> FORT EXPLOG LLLAV ESTATUTOS RLLAV .)


state 104

    (34) WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .

    RLLAV           reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)
    ID              reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)
    CALL            reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)
    IFT             reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)
    FORT            reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)
    WHILET          reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)
    DOT             reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)
    SCANT           reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)
    PUTST           reduce using rule 34 (WHILE -> WHILET EXPLOG LLLAV ESTATUTOS RLLAV .)


state 105

    (35) WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET . EXPLOG ENDINS
    (55) EXPLOG -> . EXPLOG ORT TL
    (56) EXPLOG -> . TL
    (57) TL -> . TL ANDT FL
    (58) TL -> . FL
    (59) FL -> . LPAR EXPLOG RPAR
    (60) FL -> . CTE OPREL CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 50
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPLOG                         shift and go to state 115
    TL                             shift and go to state 48
    FL                             shift and go to state 49
    CTE                            shift and go to state 51

state 106

    (36) SCAN -> SCANT LPAR Y ID RPAR . ENDINS

    ENDINS          shift and go to state 116


state 107

    (37) SCAN -> SCANT LPAR Y ID ARRAY . RPAR ENDINS

    RPAR            shift and go to state 117


state 108

    (38) Y -> Y ID COMA .

    ID              reduce using rule 38 (Y -> Y ID COMA .)


state 109

    (40) PUTS -> PUTST LPAR Z EXPAR RPAR . ENDINS

    ENDINS          shift and go to state 118


state 110

    (43) Z -> Z EXPAR COMA .

    STRING          reduce using rule 43 (Z -> Z EXPAR COMA .)
    LPAR            reduce using rule 43 (Z -> Z EXPAR COMA .)
    ID              reduce using rule 43 (Z -> Z EXPAR COMA .)
    DNUMERO         reduce using rule 43 (Z -> Z EXPAR COMA .)
    NUMERO          reduce using rule 43 (Z -> Z EXPAR COMA .)


state 111

    (41) PUTS -> PUTST LPAR Z STRING RPAR . ENDINS

    ENDINS          shift and go to state 119


state 112

    (42) Z -> Z STRING COMA .

    STRING          reduce using rule 42 (Z -> Z STRING COMA .)
    LPAR            reduce using rule 42 (Z -> Z STRING COMA .)
    ID              reduce using rule 42 (Z -> Z STRING COMA .)
    DNUMERO         reduce using rule 42 (Z -> Z STRING COMA .)
    NUMERO          reduce using rule 42 (Z -> Z STRING COMA .)


state 113

    (12) ARRAY -> LCOR EXPAR RCOR LCOR EXPAR . RCOR
    (13) ARRAY -> LCOR EXPAR RCOR LCOR EXPAR . RCOR LCOR EXPAR RCOR
    (45) EXPAR -> EXPAR . SUMRES T

    RCOR            shift and go to state 120
    SUMRES          shift and go to state 81


state 114

    (28) IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF . ELSE
    (29) ELIF -> ELIF . ELIFT EXPLOG LLLAV ESTATUTOS RLLAV
    (31) ELSE -> . ELST LLLAV ESTATUTOS RLLAV
    (32) ELSE -> .

    ELIFT           shift and go to state 122
    ELST            shift and go to state 123
    RLLAV           reduce using rule 32 (ELSE -> .)
    ID              reduce using rule 32 (ELSE -> .)
    CALL            reduce using rule 32 (ELSE -> .)
    IFT             reduce using rule 32 (ELSE -> .)
    FORT            reduce using rule 32 (ELSE -> .)
    WHILET          reduce using rule 32 (ELSE -> .)
    DOT             reduce using rule 32 (ELSE -> .)
    SCANT           reduce using rule 32 (ELSE -> .)
    PUTST           reduce using rule 32 (ELSE -> .)

    ELSE                           shift and go to state 121

state 115

    (35) WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG . ENDINS
    (55) EXPLOG -> EXPLOG . ORT TL

    ENDINS          shift and go to state 124
    ORT             shift and go to state 70


state 116

    (36) SCAN -> SCANT LPAR Y ID RPAR ENDINS .

    RLLAV           reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)
    ID              reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)
    CALL            reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)
    IFT             reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)
    FORT            reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)
    WHILET          reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)
    DOT             reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)
    SCANT           reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)
    PUTST           reduce using rule 36 (SCAN -> SCANT LPAR Y ID RPAR ENDINS .)


state 117

    (37) SCAN -> SCANT LPAR Y ID ARRAY RPAR . ENDINS

    ENDINS          shift and go to state 125


state 118

    (40) PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .

    RLLAV           reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)
    ID              reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)
    CALL            reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)
    IFT             reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)
    FORT            reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)
    WHILET          reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)
    DOT             reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)
    SCANT           reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)
    PUTST           reduce using rule 40 (PUTS -> PUTST LPAR Z EXPAR RPAR ENDINS .)


state 119

    (41) PUTS -> PUTST LPAR Z STRING RPAR ENDINS .

    RLLAV           reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)
    ID              reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)
    CALL            reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)
    IFT             reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)
    FORT            reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)
    WHILET          reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)
    DOT             reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)
    SCANT           reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)
    PUTST           reduce using rule 41 (PUTS -> PUTST LPAR Z STRING RPAR ENDINS .)


state 120

    (12) ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .
    (13) ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR . LCOR EXPAR RCOR

    ENDINS          reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    IGUAL           reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    OPREL           reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    MULTDIV         reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    RCOR            reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    SUMRES          reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    RPAR            reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    ANDT            reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    LLLAV           reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    ORT             reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    COMA            reduce using rule 12 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    LCOR            shift and go to state 126


state 121

    (28) IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .

    RLLAV           reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)
    ID              reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)
    CALL            reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)
    IFT             reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)
    FORT            reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)
    WHILET          reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)
    DOT             reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)
    SCANT           reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)
    PUTST           reduce using rule 28 (IF -> IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE .)


state 122

    (29) ELIF -> ELIF ELIFT . EXPLOG LLLAV ESTATUTOS RLLAV
    (55) EXPLOG -> . EXPLOG ORT TL
    (56) EXPLOG -> . TL
    (57) TL -> . TL ANDT FL
    (58) TL -> . FL
    (59) FL -> . LPAR EXPLOG RPAR
    (60) FL -> . CTE OPREL CTE
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 50
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPLOG                         shift and go to state 127
    TL                             shift and go to state 48
    FL                             shift and go to state 49
    CTE                            shift and go to state 51

state 123

    (31) ELSE -> ELST . LLLAV ESTATUTOS RLLAV

    LLLAV           shift and go to state 128


state 124

    (35) WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .

    RLLAV           reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)
    ID              reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)
    CALL            reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)
    IFT             reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)
    FORT            reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)
    WHILET          reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)
    DOT             reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)
    SCANT           reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)
    PUTST           reduce using rule 35 (WHILE -> DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS .)


state 125

    (37) SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .

    RLLAV           reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)
    ID              reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)
    CALL            reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)
    IFT             reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)
    FORT            reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)
    WHILET          reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)
    DOT             reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)
    SCANT           reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)
    PUTST           reduce using rule 37 (SCAN -> SCANT LPAR Y ID ARRAY RPAR ENDINS .)


state 126

    (13) ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR . EXPAR RCOR
    (45) EXPAR -> . EXPAR SUMRES T
    (46) EXPAR -> . T
    (47) T -> . T MULTDIV F
    (48) T -> . F
    (49) F -> . CTE
    (50) F -> . LPAR EXPAR RPAR
    (51) CTE -> . ID
    (52) CTE -> . ID ARRAY
    (53) CTE -> . DNUMERO
    (54) CTE -> . NUMERO

    LPAR            shift and go to state 65
    ID              shift and go to state 52
    DNUMERO         shift and go to state 53
    NUMERO          shift and go to state 54

    EXPAR                          shift and go to state 129
    T                              shift and go to state 62
    F                              shift and go to state 63
    CTE                            shift and go to state 64

state 127

    (29) ELIF -> ELIF ELIFT EXPLOG . LLLAV ESTATUTOS RLLAV
    (55) EXPLOG -> EXPLOG . ORT TL

    LLLAV           shift and go to state 130
    ORT             shift and go to state 70


state 128

    (31) ELSE -> ELST LLLAV . ESTATUTOS RLLAV
    (17) ESTATUTOS -> . ESTATUTOS ASIGNACION
    (18) ESTATUTOS -> . ESTATUTOS LLAMADAS
    (19) ESTATUTOS -> . ESTATUTOS IF
    (20) ESTATUTOS -> . ESTATUTOS FOR
    (21) ESTATUTOS -> . ESTATUTOS WHILE
    (22) ESTATUTOS -> . ESTATUTOS SCAN
    (23) ESTATUTOS -> . ESTATUTOS PUTS
    (24) ESTATUTOS -> .

    RLLAV           reduce using rule 24 (ESTATUTOS -> .)
    ID              reduce using rule 24 (ESTATUTOS -> .)
    CALL            reduce using rule 24 (ESTATUTOS -> .)
    IFT             reduce using rule 24 (ESTATUTOS -> .)
    FORT            reduce using rule 24 (ESTATUTOS -> .)
    WHILET          reduce using rule 24 (ESTATUTOS -> .)
    DOT             reduce using rule 24 (ESTATUTOS -> .)
    SCANT           reduce using rule 24 (ESTATUTOS -> .)
    PUTST           reduce using rule 24 (ESTATUTOS -> .)

    ESTATUTOS                      shift and go to state 131

state 129

    (13) ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR . RCOR
    (45) EXPAR -> EXPAR . SUMRES T

    RCOR            shift and go to state 132
    SUMRES          shift and go to state 81


state 130

    (29) ELIF -> ELIF ELIFT EXPLOG LLLAV . ESTATUTOS RLLAV
    (17) ESTATUTOS -> . ESTATUTOS ASIGNACION
    (18) ESTATUTOS -> . ESTATUTOS LLAMADAS
    (19) ESTATUTOS -> . ESTATUTOS IF
    (20) ESTATUTOS -> . ESTATUTOS FOR
    (21) ESTATUTOS -> . ESTATUTOS WHILE
    (22) ESTATUTOS -> . ESTATUTOS SCAN
    (23) ESTATUTOS -> . ESTATUTOS PUTS
    (24) ESTATUTOS -> .

    RLLAV           reduce using rule 24 (ESTATUTOS -> .)
    ID              reduce using rule 24 (ESTATUTOS -> .)
    CALL            reduce using rule 24 (ESTATUTOS -> .)
    IFT             reduce using rule 24 (ESTATUTOS -> .)
    FORT            reduce using rule 24 (ESTATUTOS -> .)
    WHILET          reduce using rule 24 (ESTATUTOS -> .)
    DOT             reduce using rule 24 (ESTATUTOS -> .)
    SCANT           reduce using rule 24 (ESTATUTOS -> .)
    PUTST           reduce using rule 24 (ESTATUTOS -> .)

    ESTATUTOS                      shift and go to state 133

state 131

    (31) ELSE -> ELST LLLAV ESTATUTOS . RLLAV
    (17) ESTATUTOS -> ESTATUTOS . ASIGNACION
    (18) ESTATUTOS -> ESTATUTOS . LLAMADAS
    (19) ESTATUTOS -> ESTATUTOS . IF
    (20) ESTATUTOS -> ESTATUTOS . FOR
    (21) ESTATUTOS -> ESTATUTOS . WHILE
    (22) ESTATUTOS -> ESTATUTOS . SCAN
    (23) ESTATUTOS -> ESTATUTOS . PUTS
    (25) ASIGNACION -> . ID IGUAL EXPAR ENDINS
    (26) ASIGNACION -> . ID ARRAY IGUAL EXPAR ENDINS
    (27) LLAMADAS -> . CALL ID ENDINS
    (28) IF -> . IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (33) FOR -> . FORT EXPLOG LLLAV ESTATUTOS RLLAV
    (34) WHILE -> . WHILET EXPLOG LLLAV ESTATUTOS RLLAV
    (35) WHILE -> . DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (36) SCAN -> . SCANT LPAR Y ID RPAR ENDINS
    (37) SCAN -> . SCANT LPAR Y ID ARRAY RPAR ENDINS
    (40) PUTS -> . PUTST LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> . PUTST LPAR Z STRING RPAR ENDINS

    RLLAV           shift and go to state 134
    ID              shift and go to state 24
    CALL            shift and go to state 33
    IFT             shift and go to state 34
    FORT            shift and go to state 35
    WHILET          shift and go to state 36
    DOT             shift and go to state 37
    SCANT           shift and go to state 38
    PUTST           shift and go to state 39

    ASIGNACION                     shift and go to state 26
    LLAMADAS                       shift and go to state 27
    IF                             shift and go to state 28
    FOR                            shift and go to state 29
    WHILE                          shift and go to state 30
    SCAN                           shift and go to state 31
    PUTS                           shift and go to state 32

state 132

    (13) ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .

    ENDINS          reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    IGUAL           reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    OPREL           reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    MULTDIV         reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    RCOR            reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    SUMRES          reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    RPAR            reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    ANDT            reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    LLLAV           reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    ORT             reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)
    COMA            reduce using rule 13 (ARRAY -> LCOR EXPAR RCOR LCOR EXPAR RCOR LCOR EXPAR RCOR .)


state 133

    (29) ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS . RLLAV
    (17) ESTATUTOS -> ESTATUTOS . ASIGNACION
    (18) ESTATUTOS -> ESTATUTOS . LLAMADAS
    (19) ESTATUTOS -> ESTATUTOS . IF
    (20) ESTATUTOS -> ESTATUTOS . FOR
    (21) ESTATUTOS -> ESTATUTOS . WHILE
    (22) ESTATUTOS -> ESTATUTOS . SCAN
    (23) ESTATUTOS -> ESTATUTOS . PUTS
    (25) ASIGNACION -> . ID IGUAL EXPAR ENDINS
    (26) ASIGNACION -> . ID ARRAY IGUAL EXPAR ENDINS
    (27) LLAMADAS -> . CALL ID ENDINS
    (28) IF -> . IFT EXPLOG LLLAV ESTATUTOS RLLAV ELIF ELSE
    (33) FOR -> . FORT EXPLOG LLLAV ESTATUTOS RLLAV
    (34) WHILE -> . WHILET EXPLOG LLLAV ESTATUTOS RLLAV
    (35) WHILE -> . DOT LLLAV ESTATUTOS RLLAV WHILET EXPLOG ENDINS
    (36) SCAN -> . SCANT LPAR Y ID RPAR ENDINS
    (37) SCAN -> . SCANT LPAR Y ID ARRAY RPAR ENDINS
    (40) PUTS -> . PUTST LPAR Z EXPAR RPAR ENDINS
    (41) PUTS -> . PUTST LPAR Z STRING RPAR ENDINS

    RLLAV           shift and go to state 135
    ID              shift and go to state 24
    CALL            shift and go to state 33
    IFT             shift and go to state 34
    FORT            shift and go to state 35
    WHILET          shift and go to state 36
    DOT             shift and go to state 37
    SCANT           shift and go to state 38
    PUTST           shift and go to state 39

    ASIGNACION                     shift and go to state 26
    LLAMADAS                       shift and go to state 27
    IF                             shift and go to state 28
    FOR                            shift and go to state 29
    WHILE                          shift and go to state 30
    SCAN                           shift and go to state 31
    PUTS                           shift and go to state 32

state 134

    (31) ELSE -> ELST LLLAV ESTATUTOS RLLAV .

    RLLAV           reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)
    ID              reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)
    CALL            reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)
    IFT             reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)
    FORT            reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)
    WHILET          reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)
    DOT             reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)
    SCANT           reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)
    PUTST           reduce using rule 31 (ELSE -> ELST LLLAV ESTATUTOS RLLAV .)


state 135

    (29) ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .

    ELIFT           reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    ELST            reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    RLLAV           reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    ID              reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    CALL            reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    IFT             reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    FORT            reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    WHILET          reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    DOT             reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    SCANT           reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)
    PUTST           reduce using rule 29 (ELIF -> ELIF ELIFT EXPLOG LLLAV ESTATUTOS RLLAV .)

